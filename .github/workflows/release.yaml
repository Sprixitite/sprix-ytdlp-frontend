name: Create Release

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]

jobs:
    build-windows:
        runs-on: windows-latest
        steps:
            - uses: actions/checkout@v3
            - uses: subosito/flutter-action@v2
              with:
                channel: "stable"
            - run: flutter config --enable-windows-desktop
            - run: flutter build windows --release
    build-linux:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: subosito/flutter-action@v2
              with:
                channel: "stable"
            - run: |
                sudo apt-get update -y
                sudo apt-get install -y ninja-build libgtk-3-dev
            - run: flutter config --enable-linux-desktop
            - run: flutter build linux --release
    do-release:
        runs-on: ubuntu-latest
        needs: [build-linux, build-windows]
        steps:
            - name: Create New Release
              id: create_release
              uses: actions/create-release@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                tag_name: Sprixitite/sprix-ytdlp-frontend/Latest
                release_name: Release ${{ github.ref }}
                draft: false
                prerelease: true
                body: |
                    This release zip is automatically updated on every push/PR.
            
            - name: Compress Build Outputs
              id: compress_outputs
              run: |
                sudo apt install zip tar
                zip ./windows.zip build/windows/x64/release/bundle/ytdl.exe
                tar -zcf ./linux.tar.gz build/linux/x64/release/bundle/ytdl

            - name: Upload Windows Build To Release
              id: upload_windows_release
              uses: actions/upload-release-asset@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                upload_url: ${{ steps.create_release.outputs.upload_url }}
                asset_path: ./windows.zip
                asset_name: windows.zip
                asset_content_type: application/zip

            - name: Upload Linux Build To Release
              id: upload_linux_release
              uses: actions/upload-release-asset@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                upload_url: ${{ steps.create_release.outputs.upload_url }}
                asset_path: ./linux.tar.gz
                asset_name: linux.tar.gz
                asset_content_type: application/gzip